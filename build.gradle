apply plugin: 'java'
apply plugin: 'ca.cutterslade.analyze'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: "net.ossindex.audit"
apply from: "$rootProject.projectDir/dependencies.gradle"

defaultTasks 'check'

repositories {
    jcenter()
}

dependencies {
    compile "org.slf4j:slf4j-api:$rootProject.slf4jVersion"

    compile "javax.ws.rs:javax.ws.rs-api:$rootProject.javaxWsRsApiVersion"
    compile "javax.annotation:javax.annotation-api:$rootProject.javaxAnnotationApiVersion"
    compile "javax.inject:javax.inject:1"

    compile "com.auth0:java-jwt:$rootProject.jwtVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$rootProject.jacksonVersion"

    testCompile "junit:junit:$rootProject.junitVersion"
    testCompile "org.assertj:assertj-core:$rootProject.assertjVersion"

    testCompile "io.dropwizard:dropwizard-jersey:$rootProject.dropwizardVersion"
    testCompile "io.dropwizard:dropwizard-core:$rootProject.dropwizardVersion"
    testCompile "io.dropwizard:dropwizard-testing:$rootProject.dropwizardVersion"

    testCompile "javax.servlet:javax.servlet-api:$rootProject.javaxServletApiVersion"
    testCompile "org.glassfish.jersey.core:jersey-server:$rootProject.jerseyVersion"
}

buildscript {
    apply from: "$rootProject.projectDir/dependencies.gradle"
    repositories {
        jcenter()
        maven {
           url "https://plugins.gradle.org/m2/"
         }
    }
    dependencies {
        classpath "com.github.ben-manes:gradle-versions-plugin:$rootProject.gradleVersionsPluginVersion"
        classpath "ca.cutterslade.gradle:gradle-dependency-analyze:$rootProject.gradleDependencyAnalyzePluginVersion"
        classpath "gradle.plugin.net.ossindex:ossindex-gradle-plugin:0.1.0"
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:all" << "-Werror"
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            pom.groupId = 'com.richodemus.dropwizard-jwt'
            pom.artifactId = 'dropwizard-jwt'
            pom.version = '1.0.0'

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Dropwizard JWT'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'JSON Web Token support in Dropwizard using the javax security annotations'
                url 'https://github.com/RichoDemus/dropwizard-jwt'

                scm {
                    connection 'scm:git:https://github.com/RichoDemus/dropwizard-jwt'
                    developerConnection 'scm:git:https://github.com/RichoDemus/dropwizard-jwt'
                    url 'https://github.com/RichoDemus/dropwizard-jwt'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'richodemus'
                        name 'Richard Tjerngren'
                        email 'richodemus@gmail.com'
                    }
                }
            }
        }
    }
}
